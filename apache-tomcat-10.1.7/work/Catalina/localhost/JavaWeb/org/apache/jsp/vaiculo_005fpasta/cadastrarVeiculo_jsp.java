/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-08-31 12:20:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.vaiculo_005fpasta;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class cadastrarVeiculo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Veículo</title>\n");
      out.write("        <link href=\"../styles/style.css\" rel=\"stylesheet\" type=\"text/css\"/>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"vertical\"></div>\n");
      out.write("        <form action=\"incluir_veiculo.jsp\" method=\"post\" class=\"tela\"> \n");
      out.write("            <h1>Cadastre o Veículo</h1>\n");
      out.write("            \n");
      out.write("             <div class=\"campo\"> \n");
      out.write("            <label for=\"idVeiculo\"> ID Veículo </label><br>\n");
      out.write("            <input type=\"number\" id=\"idVeiculo\" name=\"idVeiculo\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\"> \n");
      out.write("            <label for=\"marcaVeiculo\"> Marca </label><br>\n");
      out.write("            <input type=\"text\" maxlength=\"30\" id=\"marcaVeiculo\" name=\"marcaVeiculo\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\"> \n");
      out.write("            <label for=\"modeloVeiculo\"> Modelo </label><br>\n");
      out.write("            <input type=\"text\" maxlength=\"30\" id=\"modeloVeiculo\" name=\"modeloVeiculo\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"placaVeiculo\"> Placa </label><br>\n");
      out.write("            <input type=\"text\" maxlength=\"12\" id=\"placaVeiculo\" name=\"placaVeiculo\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"corPredominante\"> Cor Predominante </label><br>\n");
      out.write("            <input type=\"text\" maxlength=\"12\" id=\"corPredominante\" name=\"corPredominante\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"anoFabricacao\"> Ano </label><br>\n");
      out.write("            <input type=\"number\" id=\"anoFabricacao\" name=\"anoFabricacao\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"disponivel\"> Disponível </label><br>\n");
      out.write("            <input type=\"checkbox\" id=\"disponivel\" name=\"disponivel\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"temArCondicionado\"> Ar-Condicionado </label><br>\n");
      out.write("            <input type=\"checkbox\" id=\"temArCondicionado\" name=\"temArCondicionado\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"temDirHidraulica\"> Direção Hidráulica </label><br>\n");
      out.write("            <input type=\"checkbox\" id=\"temDirHidraulica\" name=\"temDirHidraulica\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <label for=\"revisado\"> Revisado </label><br>\n");
      out.write("            <input type=\"checkbox\" id=\"revisado\" name=\"revisado\"> <br>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <style>\n");
      out.write("            input[type=number]::-webkit-inner-spin-button,\n");
      out.write("            input[type=number]::-webkit-outer-spin-button {\n");
      out.write("            -webkit-appearance: none;\n");
      out.write("            margin: 0;\n");
      out.write("               }\n");
      out.write("            </style>\n");
      out.write("            \n");
      out.write("            <div class=\"campo\">\n");
      out.write("            <button type=\"submit\">Incluir</button>\n");
      out.write("            <button type=\"reset\">Cancelar</button>\n");
      out.write("           \n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("        </form>\n");
      out.write("            <div class=\"vertical\"></div>\n");
      out.write("            <a class=\"voltar\" href=\"../index.html\">Voltar</a>\n");
      out.write("            \n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
